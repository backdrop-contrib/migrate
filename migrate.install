<?php

/**
 * @file
 * Migrate module installation
 */

/**
 * @todo Please document this function.
 * @see http://drupal.org/node/1354
 */
function migrate_schema() {
  $schema = array();
  $schema['migrate_status'] = migrate_schema_status();
  $schema['migrate_log'] = migrate_schema_log();
  $schema['migrate_group'] = migrate_schema_group();
  $schema['migrate_field_mapping'] = migrate_schema_field_mapping();
  return $schema;
}

/**
 * @todo Please document this function.
 * @see http://drupal.org/node/1354
 */
function migrate_schema_status() {
  return array(
    'description' => 'Status information for migrations',
    'fields' => array(
      'machine_name' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'description' => 'Unique machine name for migration',
      ),
      'class_name' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'description' => 'Name of class to instantiate for this migration',
      ),
      'group_name' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'description' => 'Name of group containing migration',
      ),
      'status' => array(
        'type' => 'int',
        'size' => 'tiny',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'Current status of migration',
      ),
      'highwater' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
        'description' => 'Highwater mark for detecting updated content',
      ),
      'arguments' => array(
        'type' => 'blob',
        'not null' => FALSE,
        'size' => 'big',
        'serialize' => TRUE,
        'description' => 'A serialized array of arguments to the migration constructor',
      ),
    ),
    'primary key' => array('machine_name'),
  );
}

/**
 * @todo Please document this function.
 * @see http://drupal.org/node/1354
 */
function migrate_schema_log() {
  return array(
    'description' => 'History of migration processes',
    'fields' => array(
      'mlid' => array(
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => 'Primary key for migrate_log table',
      ),
      'machine_name' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'description' => 'Unique machine name for migration',
      ),
      'process_type' => array(
        'type' => 'int',
        'size' => 'tiny',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => 'Type of migration process - 1 for import, 2 for rollback',
      ),
      'starttime' => array(
        'type' => 'int',
        'size' => 'big',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => 'Begin time of a migration process, times 1000',
      ),
      'endtime' => array(
        'type' => 'int',
        'size' => 'big',
        'unsigned' => TRUE,
        'not null' => FALSE,
        'description' => 'End time of a migration process, times 1000',
      ),
      'initialhighwater' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'description' => 'Initial highwater mark',
      ),
      'finalhighwater' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
        'description' => 'Final highwater mark',
      ),
      'numprocessed' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => FALSE,
        'description' => 'Number of items processed',
      ),
    ),
    'primary key' => array('mlid'),
  );
}

/**
 * @todo Please document this function.
 * @see http://drupal.org/node/1354
 */
function migrate_schema_group() {
  return array(
    'description' => 'Information on migration groups',
    'fields' => array(
      'name' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'description' => 'Unique machine name for a migration group',
      ),
      'title' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'description' => 'Display name for a migration group',
      ),
      'arguments' => array(
        'type' => 'blob',
        'not null' => FALSE,
        'size' => 'big',
        'serialize' => TRUE,
        'description' => 'A serialized array of arguments to the migration group',
      ),
    ),
    'primary key' => array('name'),
  );
}

/**
 * @todo Please document this function.
 * @see http://drupal.org/node/1354
 */
function migrate_schema_field_mapping() {
  return array(
    'description' => 'History of migration processes',
    'fields' => array(
      'fmid' => array(
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => 'Unique ID for the field mapping row',
      ),
      'machine_name' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'description' => 'Parent migration for the field mapping',
      ),
      'destination_field' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'description' => 'Destination field for the field mapping',
      ),
      'source_field' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'description' => 'Source field for the field mapping',
      ),
      'options' => array(
        'type' => 'blob',
        'not null' => FALSE,
        'size' => 'big',
        'serialize' => TRUE,
        'description' => 'A serialized MigrateFieldMapping object holding all options',
      ),
    ),
    'primary key' => array('fmid'),
  );
}

/**
 * Implements hook_uninstall().
 * Drop map/message tables, in case implementing classes did not.
 */
function migrate_uninstall() {
  // Note: If a derived Migration class defined its own map or message
  // table name not fitting this pattern, that class is solely responsible for
  // cleaning up
  // TODO: Prefix table names (db_find_tables does not do it)
  foreach (db_find_tables('migrate_map_%') as $tablename) {
    db_drop_table($tablename);
  }
  foreach (db_find_tables('migrate_message_%') as $tablename) {
    db_drop_table($tablename);
  }

  // Remove any file_usage entries we've written
  if (db_table_exists('file_usage')) {
    db_delete('file_usage')
      ->condition('module', 'migrate')
      ->execute();
  }

  // Remove variables
  config_clear('migrate.settings', 'migrate_disable_autoregistration');
  config_clear('migrate.settings', 'migrate_disabled_handlers');
  config_clear('migrate.settings', 'migrate_deprecation_warnings');
}

// TODO The old hook_update_N functions cannot be applied to Backdrop.
function migrate_update_7001() { }

// TODO The old hook_update_N functions cannot be applied to Backdrop.
function migrate_update_7002() { }

// TODO The old hook_update_N functions cannot be applied to Backdrop.
function migrate_update_7003() { }

// TODO The old hook_update_N functions cannot be applied to Backdrop.
function migrate_update_7004() { }

// TODO The old hook_update_N functions cannot be applied to Backdrop.
function migrate_update_7005() { }

// TODO The old hook_update_N functions cannot be applied to Backdrop.
function migrate_update_7006() { }

// TODO The old hook_update_N functions cannot be applied to Backdrop.
function migrate_update_7007() { }

// TODO The old hook_update_N functions cannot be applied to Backdrop.
function migrate_update_7008() { }

// TODO The old hook_update_N functions cannot be applied to Backdrop.
function migrate_update_7201() { }

// TODO The old hook_update_N functions cannot be applied to Backdrop.
function migrate_update_7202() { }

// TODO The old hook_update_N functions cannot be applied to Backdrop.
function migrate_update_7203() { }

// TODO The old hook_update_N functions cannot be applied to Backdrop.
function migrate_update_7204() { }

// TODO The old hook_update_N functions cannot be applied to Backdrop.
function migrate_update_7205() { }

// TODO The old hook_update_N functions cannot be applied to Backdrop.
function migrate_update_7206() { }

// TODO The old hook_update_N functions cannot be applied to Backdrop.
function migrate_update_7207() { }

/**
 * Implements hook_update_last_removed().
 */
function migrate_update_last_removed() {
  return 7207;
}

/**
 * Implements hook_update_N().
 */
function migrate_update_1000() {
  $config = config('migrate.settings');
  $config->set('migrate_deprecation_warnings', update_variable_get('migrate_deprecation_warnings', '1'));
  $config->set('migrate_disabled_handlers', update_variable_get('migrate_disabled_handlers', 'dynamic value in file /migrate/migrate.module line 207'));
  $config->set('migrate_source_json_active_url', update_variable_get('migrate_source_json_active_url', 'NULL'));
  $config->set('migrate_patterns', update_variable_get('migrate_patterns', 'dynamic value in file /migrate/uri_map_redirect.php line 27'));
  $config->set('migrate_source_uri_table', update_variable_get('migrate_source_uri_table', 'migrate_source_uri_map'));
  update_variable_del('migrate_deprecation_warnings');
  update_variable_del('migrate_disabled_handlers');
  update_variable_del('migrate_source_json_active_url');
  update_variable_del('migrate_patterns');
  update_variable_del('migrate_source_uri_table');
}

/**
 * Implements hook_install().
 */
function migrate_install() {
  // Dynamically generated variable data was detected.
  // /migrate/migrate.module line 207
  // /migrate/uri_map_redirect.php line 27
}
